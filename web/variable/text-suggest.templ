package variable

import (
    "fmt"
    "nbientry/web/common"
)

templ (v var_str_suggest) RenderInNbi() {
    <div flex="col" class="variable" id={ fmt.Sprintf("variable-%d", v.Type().Id) }>
        <div flex="row">
            <label for={ fmt.Sprintf("%d-input", v.T.Id) }>
                <h3 class="name">{ v.T.Name }</h3>
            </label>
        </div>
        <div flex="row" title={ v.T.Description }>
            <input type="text"
                name={ fmt.Sprintf("%d", v.T.Id) }
                value={ v.Value }
                id={ fmt.Sprintf("%d-input", v.T.Id) }
                list={ fmt.Sprintf("%d-list", v.T.Id) }
                hx-target={ fmt.Sprintf("#%d-exist-btn", v.T.Id) }
                hx-trigger="change"
                hx-patch={ fmt.Sprintf("/htmx/autocomplete/%d", v.T.Id) }
                hx-swap="outerHTML"
            />
            @v.render_save_btn()
        </div>
    </div>
}

templ (v var_str_suggest) RenderInViewer() {
    @RenderGenericVar_View(&v)
}

templ (v var_str_suggest) RenderInEditor() {
    @RenderGenericVar_Edit(&v, text_types)
}

templ (v var_str_suggest) render_save_btn() {
    <div id={ fmt.Sprintf("%d-exist-btn", v.Type().Id) }>
        if v.exists() {
            <button hx-put={ fmt.Sprintf("/htmx/var/%d", v.T.Id) }
                hx-swap="outerHTML"
                hx-trigger="click"
                hx-target={ fmt.Sprintf("#%d-exist-btn", v.T.Id) }
                class="action new"
                title="Add Autocomplete"
            >
                @common.SvgIcon("dazzle", "plus")
            </button>
        } else {
            <button hx-delete={ fmt.Sprintf("/htmx/var/%d", v.T.Id) }
                hx-swap="outerHTML"
                hx-trigger="click"
                hx-target={ fmt.Sprintf("#%d-exist-btn", v.T.Id) }
                class="action delete"
                title="Remove Autocomplete"
            >
                @common.SvgIcon("dazzle", "trash")
            </button>
        }
        <datalist id={ fmt.Sprintf("%d-list", v.T.Id) }>
            for _, c := range v.list() {
                <option value={ c }/>
            }
        </datalist>
    </div>
}

