package common

templ Buttons(user User, page EditBtn) {
    <div id="buttons">
        <div>
            if (user.Admin && page.RequireAdmin) || (user.Email != "" && page.RequireEditor) {
                <a href={ templ.SafeURL(page.Href) }>
                    @Button("dazzle", page.Icon, page.Color, page.Class, page.Title)
                </a>
            }
            if user.Email != "" && user.Email == page.Href {
                <a href="/user/login">
                    @Button("dazzle", "diamond-turn-right", "rose", "login", "Log out")
                </a>
            } else {
                <a href="/user">
                    if user.Email == "" {
                        @Button("dazzle", "user", "iris", "login", "Log in")
                    } else if user.Admin {
                        @Button("dazzle", "crown", "gold", "login", "Admin")
                    } else {
                        @Button("dazzle", "user", "tree", "login", "User")
                    }
                </a>
            }
        </div>
        <div>
            <a href="/">
                @Button("dazzle", "house-chimney-blank", "pine", "home", "Home")
            </a>
            @Button("dazzle", "moon", "inv", "theme", "Switch to Dark Mode")
        </div>
    </div>
    <div class="svg-cache">
        @SvgIcon("dazzle", "sun")
    </div>
}

templ Button(collection string, icon string, color string, id string, title string) {
    <button id={ id } title={ title } class={ color }>
        @SvgIcon(collection, icon)
    </button>
}

type EditBtn struct {
    Href string
    RequireEditor bool
    RequireAdmin bool
    Title string
    Icon string
    Class string
    Color string
}

templ Action(title, icon string, attrs templ.Attributes) {
    <button { attrs... }
        title={ title }
        class={ "action", action_btn_icon_to_cls(icon) }
        if _, ok := attrs["hx-trigger"]; !ok {
            hx-trigger="click"
        }
        if _, ok := attrs["hx-swap"]; !ok {
            hx-swap="outerHTML"
        }
        if _, ok := attrs["type"]; !ok {
            type="button"
        }
    >
        @SvgIcon("dazzle", icon)
    </button>
}

func action_btn_icon_to_cls(icon string) string {
    switch icon {
    case "plus":
        return "pine"

    case "trash-undo":
        return "gold"

    case "floppy-disk":
        return "tree"

    case "pencil":
        return "iris"

    case "trash":
        return "love"

    case "caret-down":
        fallthrough
    case "caret-up":
        return "gold"

    default:
        return "nil-icon-" + icon
    }
}
