package common

import (
    "fmt"
)

templ (u User) RenderUser_View() {
    <div class="account" id={ fmt.Sprintf("user-%d", u.Id) }>
        <div class="img">
            <img src={ u.Image } />
        </div>
        <div class="info">
            <div class="name">
                <h1>{ u.FullName }</h1>
            </div>
            <div class="email">
                <div class="badge">@SvgIcon("dazzle", "mail")</div>
                <div>{ u.Email }</div>
            </div>
            <div class="phone">
                <div class="badge">@SvgIcon("dazzle", "phone")</div>
                <div>{ u.Phone }</div>
            </div>
        </div>
    </div>
}

templ (u User) RenderUser_Edit() {
    <div class="account" id={ fmt.Sprintf("user-%d", u.Id) }>
        <form hx-post={ fmt.Sprintf("/htmx/account/%d", u.Id) } hx-swap="outerHTML">
            <div class="img">
                @ImgUpload(u.Image, "user", "image")
            </div>
            <div class="info">
                <div class="name">
                    <input type="text" name="name" value={ u.FullName } placeholder="Full Name"/>
                    <button hx-get={ fmt.Sprintf("/htmx/account/%d", u.Id) }
                        hx-target={ fmt.Sprintf("#user-%d", u.Id) }
                        hx-trigger="click"
                        hx-swap="outerHTML"
                        class="action undo"
                        title="Discard Changes"
                    >
                        @SvgIcon("dazzle", "trash-undo")
                    </button>
                    <button hx-delete={ fmt.Sprintf("/htmx/account/%d", u.Id) }
                        hx-target={ fmt.Sprintf("#user-%d", u.Id) }
                        hx-trigger="click"
                        hx-swap="outerHTML"
                        hx-confirm="Are you sure you want to delete this account?"
                        class="action delete"
                        title="Delete Account"
                    >
                        @SvgIcon("dazzle", "trash")
                    </button>
                    <button type="submit" class="action save" title="Save Account">
                        @SvgIcon("dazzle", "floppy-disk")
                    </button>
                </div>
                <div class="email">
                    @u.RenderEmail_Edit("")
                </div>
                <div class="phone">
                    <input type="text" name="phone" value={ u.Phone } placeholder="Phone" id="phone"/>
                </div>
                <div class="password">
                    @u.RenderPassword_Edit("")
                </div>
            </div>
        </form>
    </div>
}

templ (u User) RenderEmail_Edit(reason string) {
    if reason == "" {
        <input type="text" name="email" value={ u.Email } placeholder="Email" id="email"/>
    } else {
        <input type="text" name="email" value="" class="fail" title={ reason } placeholder={ reason }/>
    }
}

templ (u User) RenderPassword_Edit(reason string) {
    if reason == "" {
        <input type="password" name="password" value="" placeholder="New Password" id="password"/>
    } else {
        <input type="password" name="password" value="" class="fail" title={ reason } placeholder={ reason }/>
    }
}

templ (u User) RenderChip() {
    <a href={ templ.SafeURL(fmt.Sprintf("/user/view/%d", u.Id)) } class="user-chip">
        <div flex="row">
            <div class="img">
                <img src={ u.Image } title={ u.FullName }/>
            </div>
            <div flex="col" class="details">
                <h3>{ u.FullName }</h3>
                <h6>{ u.Email }</h6>
            </div>
        </div>
    </a>
}

templ (u User) RenderChip_PostView(other User) {
    <div flex="row" class="post user-chip" id={ fmt.Sprintf("user-%d", u.Id) }>
        <div class="link">
            @u.RenderChip()
        </div>
        if other.Admin {
            <div flex="col" class="buttons">
                if u.Id == other.Id {
                    <button class="action undo" title="You can't demote yourself" disabled>
                        @SvgIcon("dazzle", "user-minus")
                    </button>
                } else if u.Admin {
                    <button hx-patch={ fmt.Sprintf("/htmx/user/%d", u.Id) }
                        hx-swap="outerHTML"
                        hx-trigger="click"
                        hx-target={ fmt.Sprintf("#user-%d", u.Id) }
                        hx-confirm={ fmt.Sprintf("Are you sure you want to deomote %s?", u.FullName) }
                        class="action undo"
                        title="Demote"
                    >
                        @SvgIcon("dazzle", "user-minus")
                    </button>
                } else {
                    <button hx-patch={ fmt.Sprintf("/htmx/user/%d", u.Id) }
                        hx-swap="outerHTML"
                        hx-trigger="click"
                        hx-target={ fmt.Sprintf("#user-%d", u.Id) }
                        hx-confirm={ fmt.Sprintf("Are you sure you want to promote %s?", u.FullName) }
                        class="action edit"
                        title="Promote"
                    >
                        @SvgIcon("dazzle", "user-shield")
                    </button>
                }
                if !u.IsReset() {
                    <button hx-delete={ fmt.Sprintf("/htmx/user/%d", u.Id) }
                        hx-swap="outerHTML"
                        hx-trigger="click"
                        hx-target={ fmt.Sprintf("#user-%d", u.Id) }
                        hx-confirm="Are you sure you want to reset this user's password?"
                        class="action delete"
                        title="Reset Password"
                    >
                        @SvgIcon("dazzle", "user-refresh")
                    </button>
                } else {
                    <button class="action delete" title="Password already reset" disabled>
                        @SvgIcon("dazzle", "user-refresh")
                    </button>
                }
            </div>
        }
    </div>
}
